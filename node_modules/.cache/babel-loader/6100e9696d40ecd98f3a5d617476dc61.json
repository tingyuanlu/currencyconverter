{"ast":null,"code":"var _jsxFileName = \"/Users/tingyuanlu/Desktop/Learn React/currencyconverter/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport CurrencyRow from './CurrencyRow';\nimport './App.css';\nconst BASE_URL = 'https://api.exchangeratesapi.io/latest';\n\nfunction App() {\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState();\n  const [toCurrency, setToCurrency] = useState();\n  const [exchangeRate, setExchangeRate] = useState();\n  const [amount, setAmount] = useState(1);\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\n  let toAmount, fromAmount;\n\n  if (amountInFromCurrency) {\n    fromAmount = amount;\n    toAmount = amount * exchangeRate;\n  } else {\n    toAmount = amount;\n    fromAmount = amount / exchangeRate;\n  }\n\n  useEffect(() => {\n    fetch(BASE_URL).then(res => res.json()).then(data => {\n      const firstCurrency = Object.keys(data.rates)[0];\n      setCurrencyOptions([data.base, ...Object.keys(data.rates)]);\n      setFromCurrency(data.base);\n      setToCurrency(firstCurrency);\n      setExchangeRate(data.rates[firstCurrency]);\n    });\n  }, []);\n  useEffect(() => {\n    if (fromCurrency != null && toCurrency != null) {\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`).then(res => res.json()).then(data => setExchangeRate(data.rates[toCurrency]));\n    }\n  }, [fromCurrency, toCurrency]);\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(true);\n  }\n\n  function handleToAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(false);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Convert\"), /*#__PURE__*/React.createElement(CurrencyRow, {\n    currencyOptions: currencyOptions,\n    selectedCurrency: fromCurrency,\n    onChangeCurrency: e => setFromCurrency(e.target.value),\n    amount: fromAmount,\n    onChangeAmount: handleFromAmountChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 8\n    }\n  }, \"=\"), /*#__PURE__*/React.createElement(CurrencyRow, {\n    currencyOptions: currencyOptions,\n    selectedCurrency: toCurrency,\n    onChangeCurrency: e => setToCurrency(e.target.value),\n    amount: toAmount,\n    onChangeAmount: handleToAmountChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tingyuanlu/Desktop/Learn React/currencyconverter/src/App.js"],"names":["React","useEffect","useState","CurrencyRow","BASE_URL","App","currencyOptions","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","amount","setAmount","amountInFromCurrency","setAmountInFromCurrency","toAmount","fromAmount","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","handleFromAmountChange","e","target","value","handleToAmountChange"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,WAAP;AACA,MAAMC,QAAQ,GAAC,wCAAf;;AAEA,SAASC,GAAT,GAAe;AACb,QAAK,CAACC,eAAD,EAAiBC,kBAAjB,IAAqCL,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAK,CAACM,YAAD,EAAcC,eAAd,IAA+BP,QAAQ,EAA5C;AACA,QAAM,CAACQ,UAAD,EAAYC,aAAZ,IAA2BT,QAAQ,EAAzC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAgCX,QAAQ,EAA9C;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAoBb,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACc,oBAAD,EAAuBC,uBAAvB,IAAgDf,QAAQ,CAAC,IAAD,CAA9D;AAEA,MAAIgB,QAAJ,EAAcC,UAAd;;AACA,MAAGH,oBAAH,EAAwB;AACtBG,IAAAA,UAAU,GAACL,MAAX;AACAI,IAAAA,QAAQ,GAACJ,MAAM,GAACF,YAAhB;AACD,GAHD,MAGK;AACHM,IAAAA,QAAQ,GAACJ,MAAT;AACAK,IAAAA,UAAU,GAACL,MAAM,GAACF,YAAlB;AACD;;AAEDX,EAAAA,SAAS,CAAC,MAAI;AACZmB,IAAAA,KAAK,CAAChB,QAAD,CAAL,CACCiB,IADD,CACMC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EADZ,EAECF,IAFD,CAEMG,IAAI,IAAG;AACX,YAAMC,aAAa,GAACC,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACI,KAAjB,EAAwB,CAAxB,CAApB;AACArB,MAAAA,kBAAkB,CAAC,CAACiB,IAAI,CAACK,IAAN,EAAY,GAAGH,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACI,KAAjB,CAAf,CAAD,CAAlB;AACAnB,MAAAA,eAAe,CAACe,IAAI,CAACK,IAAN,CAAf;AACAlB,MAAAA,aAAa,CAACc,aAAD,CAAb;AACAZ,MAAAA,eAAe,CAACW,IAAI,CAACI,KAAL,CAAWH,aAAX,CAAD,CAAf;AAEC,KATH;AAUD,GAXQ,EAWP,EAXO,CAAT;AAaAxB,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGO,YAAY,IAAI,IAAhB,IAAwBE,UAAU,IAAI,IAAzC,EAA8C;AAC9CU,MAAAA,KAAK,CAAE,GAAEhB,QAAS,SAAQI,YAAa,YAAWE,UAAW,EAAxD,CAAL,CACCW,IADD,CACMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADX,EAECF,IAFD,CAEMG,IAAI,IAAEX,eAAe,CAACW,IAAI,CAACI,KAAL,CAAWlB,UAAX,CAAD,CAF3B;AAGC;AAEF,GAPQ,EAOP,CAACF,YAAD,EAAcE,UAAd,CAPO,CAAT;;AAQA,WAASoB,sBAAT,CAAgCC,CAAhC,EAAkC;AAChChB,IAAAA,SAAS,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACAhB,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACD;;AACD,WAASiB,oBAAT,CAA8BH,CAA9B,EAAgC;AAC9BhB,IAAAA,SAAS,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACAhB,IAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,WAAD;AACE,IAAA,eAAe,EAAEX,eADnB;AAEE,IAAA,gBAAgB,EAAEE,YAFpB;AAGE,IAAA,gBAAgB,EAAEuB,CAAC,IAAEtB,eAAe,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAHtC;AAIE,IAAA,MAAM,EAAEd,UAJV;AAKE,IAAA,cAAc,EAAEW,sBALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eASG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SATH,eAUE,oBAAC,WAAD;AACE,IAAA,eAAe,EAAExB,eADnB;AAEE,IAAA,gBAAgB,EAAEI,UAFpB;AAGE,IAAA,gBAAgB,EAAEqB,CAAC,IAAEpB,aAAa,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAHpC;AAIE,IAAA,MAAM,EAAEf,QAJV;AAKE,IAAA,cAAc,EAAEgB,oBALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAoBD;;AAED,eAAe7B,GAAf","sourcesContent":["import React ,{useEffect, useState}from 'react';\nimport CurrencyRow from './CurrencyRow';\nimport './App.css';\nconst BASE_URL='https://api.exchangeratesapi.io/latest'\n\nfunction App() {\n  const[currencyOptions,setCurrencyOptions]=useState([]);\n  const[fromCurrency,setFromCurrency]=useState();\n  const [toCurrency,setToCurrency]=useState();\n  const [exchangeRate, setExchangeRate]=useState();\n  const [amount, setAmount]=useState(1);\n  const [amountInFromCurrency, setAmountInFromCurrency]=useState(true);\n\n  let toAmount, fromAmount\n  if(amountInFromCurrency){\n    fromAmount=amount\n    toAmount=amount*exchangeRate\n  }else{\n    toAmount=amount\n    fromAmount=amount/exchangeRate\n  }\n\n  useEffect(()=>{\n    fetch(BASE_URL)\n    .then(res=> res.json())\n    .then(data =>{\n      const firstCurrency=Object.keys(data.rates)[0]\n      setCurrencyOptions([data.base, ...Object.keys(data.rates)])\n      setFromCurrency(data.base)\n      setToCurrency(firstCurrency)\n      setExchangeRate(data.rates[firstCurrency])\n      \n      })\n  },[])\n\n  useEffect(()=>{\n    if(fromCurrency != null && toCurrency != null){\n    fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n    .then(res=>res.json())\n    .then(data=>setExchangeRate(data.rates[toCurrency]))\n    }\n\n  },[fromCurrency,toCurrency])\n  function handleFromAmountChange(e){\n    setAmount(e.target.value)\n    setAmountInFromCurrency(true);\n  }\n  function handleToAmountChange(e){\n    setAmount(e.target.value)\n    setAmountInFromCurrency(false);\n  }\n  return (\n    <div className=\"App\">\n      <h1>Convert</h1>\n      <CurrencyRow \n        currencyOptions={currencyOptions}\n        selectedCurrency={fromCurrency}\n        onChangeCurrency={e=>setFromCurrency(e.target.value)}\n        amount={fromAmount}\n        onChangeAmount={handleFromAmountChange}\n        />\n       <div>=</div>\n      <CurrencyRow \n        currencyOptions={currencyOptions}\n        selectedCurrency={toCurrency}\n        onChangeCurrency={e=>setToCurrency(e.target.value)}\n        amount={toAmount}\n        onChangeAmount={handleToAmountChange}\n        />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}